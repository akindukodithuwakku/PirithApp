name: Build and Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      platform:
        description: "Platform to build for (all, android, ios, website)"
        required: true
        default: "all"
        type: choice
        options:
          - all
          - android
          - ios
          - website

concurrency:
  group: "build-and-deploy"
  cancel-in-progress: true

jobs:
  # Website deployment
  deploy-website:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.inputs.platform == 'website' || github.event.inputs.platform == 'all'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Create Build Info for Website
        run: |
          echo "Creating build info for website..."
          npm run manual-build-info 4ae2b552-ba7f-439a-9970-4502a7fcf6be "https://drive.google.com/uc?export=download&id=1x21c_YbxtzOERDKeG3GgCwhWmZDvoxbL"
          echo "Build info created successfully!"
          echo "Contents of build-info.json:"
          cat build-info.json

      - name: Copy Build Info to Website Public
        run: |
          cp build-info.json website/public/
          echo "Copied build-info.json to website/public/"
          echo "Contents of website/public/build-info.json:"
          cat website/public/build-info.json
          echo "Verifying build-info.json exists in website/public:"
          ls -la website/public/build-info.json

      - name: Install website dependencies
        run: |
          cd website
          npm ci

      - name: Build website
        run: |
          cd website
          npm run build
          echo "Website build completed!"
          echo "Contents of build directory:"
          ls -la build/
          echo "Contents of build/build-info.json:"
          cat build/build-info.json
        env:
          REACT_APP_GITHUB_REPO: ${{ github.repository }}

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "website/build"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Android build
  build-android:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.inputs.platform == 'android' || github.event.inputs.platform == 'all'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Setup Expo CLI
        run: npm install -g @expo/cli eas-cli

      - name: Setup EAS Authentication
        run: |
          if [ -z "$EXPO_TOKEN" ]; then
            echo "Error: EXPO_TOKEN is not set or is empty"
            exit 1
          fi
          echo "EXPO_TOKEN is set and ready for EAS authentication"
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Upload Build Info
        uses: actions/upload-artifact@v4
        with:
          name: build-info
          path: build-info.json
          if-no-files-found: error

  # Create release with build info
  create-release:
    needs: [build-android]
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' &&
      needs.build-android.result == 'success'
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Android Build Info
        uses: actions/download-artifact@v4
        with:
          name: build-info
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          body: |
            ## ThePirithApp Release v${{ github.run_number }}

            ### What's New
            - Removed all storage dependencies for online-only functionality
            - Updated PDF viewer for browser-based viewing
            - Optimized app size and performance
            - Latest updates and bug fixes

            ### Downloads
            - **Android APK**: [Download from Google Drive](https://drive.google.com/uc?export=download&id=1x21c_YbxtzOERDKeG3GgCwhWmZDvoxbL)

            ### Installation Instructions
            - **Android**: Download APK and enable "Install from unknown sources"

            Built automatically from commit: ${{ github.sha }}

            ### Build Information
            - Android Build ID: 4ae2b552-ba7f-439a-9970-4502a7fcf6be
            - Build Date: ${{ github.event.head_commit.timestamp }}
            - Platform: Android
            - Profile: Preview
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
