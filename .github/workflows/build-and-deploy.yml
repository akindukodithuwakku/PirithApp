name: Build and Deploy App

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Install dependencies
        run: npm install

      - name: Setup Expo CLI
        run: npm install -g @expo/cli eas-cli

      - name: Login to Expo
        run: |
          echo ${{ secrets.EXPO_TOKEN }} | eas login --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Configure EAS
        run: |
          eas build:configure --platform android

      - name: Build Android APK
        run: |
          eas build --platform android --profile preview --non-interactive --output=./android-release.apk

      - name: Build Android AAB
        run: |
          eas build --platform android --profile production --non-interactive --output=./android-release.aab

      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: ./android-release.apk

      - name: Upload Android AAB
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: ./android-release.aab

  build-ios:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Setup Expo CLI
        run: npm install -g @expo/cli eas-cli

      - name: Login to Expo
        run: |
          echo ${{ secrets.EXPO_TOKEN }} | eas login --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Configure EAS
        run: |
          eas build:configure --platform ios

      - name: Build iOS
        run: |
          eas build --platform ios --profile preview --non-interactive

      - name: Download iOS build
        run: |
          eas build:list --platform ios --limit 1 --json | jq -r '.[0].artifacts.buildUrl' | xargs curl -L -o ios-release.ipa

      - name: Upload iOS IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: ./ios-release.ipa

  create-release:
    needs: [build-android, build-ios]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Android APK
        uses: actions/download-artifact@v4
        with:
          name: android-apk
          path: ./artifacts

      - name: Download Android AAB
        uses: actions/download-artifact@v4
        with:
          name: android-aab
          path: ./artifacts

      - name: Download iOS IPA
        uses: actions/download-artifact@v4
        with:
          name: ios-ipa
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          body: |
            ## ThePirithApp Release v${{ github.run_number }}

            ### What's New
            - Latest updates and bug fixes

            ### Downloads
            - **Android APK**: Direct installation for Android devices
            - **Android AAB**: Google Play Store submission format
            - **iOS IPA**: For iOS devices (requires sideloading)

            ### Installation Instructions
            - **Android**: Download APK and enable "Install from unknown sources"
            - **iOS**: Requires developer account or TestFlight

            Built automatically from commit: ${{ github.sha }}
          files: |
            ./artifacts/*.apk
            ./artifacts/*.aab
            ./artifacts/*.ipa
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-website:
    needs: [create-release]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install website dependencies
        run: |
          cd website
          npm install

      - name: Build website
        run: |
          cd website
          npm run build
        env:
          REACT_APP_GITHUB_REPO: ${{ github.repository }}
          REACT_APP_LATEST_RELEASE: v${{ github.run_number }}

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./website/build
